#include <bits/stdc++.h>
using namespace std;
vector<int>nsl(int a[],int n)
{
  	vector<int>left;
    stack<pair<int,int>>s;
    int pseudo_index=-1;
    for(int i=0;i<n;i++)
    {
    if(s.size()==0)
    {
        left.push_back(pseudo_index);
    }
    else if(s.size()>0 && s.top().first<a[i])
    {
        left.push_back(s.top().second);
    }
    else if(s.size()>0 && s.top().first>=a[i])
    {
        while(s.size()>0 && s.top().first>=a[i])
        {
            s.pop();
        }
        if(s.size()==0)
        {
            left.push_back(pseudo_index);
        }
        else
        {
            left.push_back(s.top().second);
        }
        
    }
    s.push({a[i],i});
    }
    return left;
}
vector<int>nsr(int a[],int n)
{
    vector<int>right;
    stack<pair<int,int>>s;
    int pseudo_index=n;
    for(int i=n-1;i>=0;i--)
    {
        if(s.size()==0)
        {
            right.push_back(pseudo_index);
        }
        else if(s.size()>0 && s.top().first<a[i])
        {
            right.push_back(s.top().second);
        }
        else if(s.size()>0 && s.top().first>=a[i])
        {
            while(s.size()>0 && s.top().first>=a[i])
            {
                s.pop();
            }
            if(s.size()==0)
            {
                right.push_back(pseudo_index);
            }
            else
            {
                right.push_back(s.top().second);
            }
        }
    
        s.push({a[i],i});
    }
    reverse(right.begin(),right.end());
    return right;
}
int area(int a[],int n)
{
    vector<int>left =nsl(a,n);
      vector<int>right=nsr(a,n);
     int area=0;
       int mx=INT_MIN;
       
       for(int i=0;i<n;i++){
           int width=right[i]-left[i]-1;
           
           area=a[i]*width;
           mx=max(mx,area);
       }
       return mx;
}
int main()
{
int n;
cin>>n;
int a[n];
for(int i=0;i<n;i++)
{
    cin>>a[i];
}

cout<<area(a,n)<<endl;
return 0;
}
